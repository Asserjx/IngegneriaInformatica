******************************************
* sistema/sistema.s
******************************************

// ( SOLUZIONE 2020-02-07
a_proc_attach:
	.cfi_startproc
	.cfi_def_cfa_offset 40
	.cfi_offset rip, -40
	.cfi_offset rsp, -16
	call salva_stato
	call c_proc_attach
	call carica_stato
	iretq
	.cfi_endproc

a_proc_wait:
	.cfi_startproc
	.cfi_def_cfa_offset 40
	.cfi_offset rip, -40
	.cfi_offset rsp, -16
	call salva_stato
	call c_proc_wait
	call carica_stato
	iretq
	.cfi_endproc
//   SOLUZIONE 2020-02-07 )


******************************************
* sistema/sistema.cpp
******************************************

// ( SOLUZIONE 2020-02-07
	des_proc *self = des_p(esecuzione->id);

	// scolleghiamo tutti gli eventuali slave
	for (des_proc *slave = self->slaves; slave; slave = slave->next_slave) {
		slave->master = 0;
	}

	// distruggiamo tutti gli eventuali slave in pausa
	while (self->paused_slaves) {
		proc_elem *slave;
		rimozione_lista(self->paused_slaves, slave);
		distruggi_processo(slave);
		flog(sev, "Processo slave %d distrutto", p->id);
		dealloca(slave);
		processi--;
	}

	des_proc *master = self->master;
	if (master) {
		if (master->is_waiting) {
			master->contesto[I_RAX] = 32;
			inserimento_lista(pronti, master->my_proc_elem);
			master->is_waiting = false;
		} else {
			self->last_exception = 32;
			inserimento_lista(master->paused_slaves, p);
			p = 0; // non distruggiamo il processo
		}
	}
	if (p) {
		distruggi_processo(p);
		flog(sev, "Processo %d %s", p->id, mode);
		processi--;
		dealloca(p);
	}
	schedulatore();
//   SOLUZIONE 2020-02-07 )
// ( SOLUZIONE 2020-02-07
extern "C" void c_proc_wait()
{
	des_proc *self = des_p(esecuzione->id);

	// e' un errore se il processo non e' master;
	if (!self->slaves) {
		flog(LOG_WARN, "proc_wait() non chiamata da un master");
		c_abort_p();
		return;
	}

	if (self->paused_slaves) {
		proc_elem *slave;
		des_proc *slave_dp;

		rimozione_lista(self->paused_slaves, slave);
		slave_dp = des_p(slave->id);
		self->contesto[I_RAX] = slave_dp->last_exception;
		distruggi_processo(slave);
		flog(LOG_INFO, "Processo slave %d distrutto", slave->id);
		dealloca(slave);
		processi--;
	} else {
		self->is_waiting = true;
		schedulatore();
	}
}
//   SOLUZIONE 2020-02-07 )


